#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"

#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"


#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"
#toClip

#include(".\\testcode2.txt")

variable { 
	var1 = v[1]
	var2 = v[5 .. 6]
	var3 = v[12, 13, 15]
}

@gv[1].copyTo(v[1])

class Slime {
	const number MaxHP = 30
	const number ofs_HP = 1
	code ID

	new(code id) {
		ID = id
	}

	function code HP() {
		return v[ID + ofs_HP] 
	}
		
	function code Percentage() {
		return @{ HP * 100 / MaxHP }
	}
}

Slime asd = new( v[35] )

@v[v[2] + 12] = Slime.Percentage
@msg.show "test"